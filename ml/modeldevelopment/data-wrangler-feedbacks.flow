{
  "metadata": {
    "version": 1,
    "disable_limits": false,
    "instance_type": "ml.m5.4xlarge"
  },
  "nodes": [
    {
      "node_id": "64859aa2-7440-486e-abf8-e1f23f9d9314",
      "type": "SOURCE",
      "operator": "sagemaker.athena_source_0.1",
      "parameters": {
        "dataset_definition": {
          "datasetSourceType": "Athena",
          "name": "americanas-dataset",
          "catalogName": "AwsDataCatalog",
          "databaseName": "cgu-poc-analytics",
          "queryString": "SELECT * FROM analytics_feedbacks",
          "s3OutputLocation": "s3://sagemaker-us-east-1-353906142196/athena/",
          "outputFormat": "parquet",
          "workgroup": null,
          "workgroupOutputLocation": null,
          "enforceWorkgroupConfiguration": false
        }
      },
      "trained_parameters": {
        "query_execution_id": "e1e7bfef-09e2-435f-b0df-5be97f80d1d8",
        "ctas_table_name": "",
        "ctas_s3_output_location": "s3://sagemaker-us-east-1-353906142196/athena/e7e7f68e5ac840f2b8f69755810e515a/data/"
      },
      "inputs": [],
      "outputs": [
        {
          "name": "default",
          "sampling": {
            "sampling_method": "sample_by_limit",
            "limit_rows": 50000
          }
        }
      ]
    },
    {
      "node_id": "06f34ce9-8fdb-42c5-9361-8a9091838246",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.infer_and_cast_type_0.1",
      "parameters": {},
      "trained_parameters": {
        "schema": {
          "col0": "string",
          "col1": "string",
          "year": "long"
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "64859aa2-7440-486e-abf8-e1f23f9d9314",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "bf620c4c-216e-4b8a-81b7-a9d91ae120c2",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.manage_rows_0.1",
      "parameters": {
        "operator": "Drop duplicates",
        "drop_duplicates_parameters": {},
        "sort_parameters": {
          "order": "Ascending",
          "sort_by": "col0"
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "06f34ce9-8fdb-42c5-9361-8a9091838246",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "3c5e1662-7f51-4da8-adf7-d64350527ad6",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.manage_columns_0.1",
      "parameters": {
        "operator": "Rename column",
        "rename_column_parameters": {
          "input_column": "col0",
          "new_name": "labels"
        },
        "drop_column_parameters": {}
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "bf620c4c-216e-4b8a-81b7-a9d91ae120c2",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "52aab134-6b04-4ce9-bd93-6d62ecba6f25",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.manage_columns_0.1",
      "parameters": {
        "operator": "Rename column",
        "rename_column_parameters": {
          "input_column": "col1",
          "new_name": "comments"
        },
        "drop_column_parameters": {}
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "3c5e1662-7f51-4da8-adf7-d64350527ad6",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "04a43f57-c0cb-4f35-b224-97d7ad1b60d2",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.manage_columns_0.1",
      "parameters": {
        "operator": "Drop column",
        "drop_column_parameters": {
          "column_to_drop": [
            "year"
          ]
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "52aab134-6b04-4ce9-bd93-6d62ecba6f25",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "f9214556-4735-475b-9625-cbfc9f209b13",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.format_string_0.1",
      "parameters": {
        "operator": "Lower case",
        "lower_case_parameters": {
          "input_column": [
            "comments"
          ]
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "04a43f57-c0cb-4f35-b224-97d7ad1b60d2",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "ac78be1b-4ba6-46a0-a50e-417be2cf0969",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.format_string_0.1",
      "parameters": {
        "operator": "Remove symbols",
        "remove_symbols_parameters": {
          "symbols": "\"",
          "input_column": [
            "comments"
          ]
        },
        "lower_case_parameters": {}
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "f9214556-4735-475b-9625-cbfc9f209b13",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "6995590c-a67c-49b9-ae1e-894ce2ef37f2",
      "type": "VISUALIZATION",
      "operator": "sagemaker.visualizations.histogram_0.1",
      "parameters": {
        "name": "Labels Quantity",
        "x_axis": "labels",
        "color_by": "labels"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "ac78be1b-4ba6-46a0-a50e-417be2cf0969",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "c7644d4e-e1c6-435d-8690-479f3301f811",
      "type": "VISUALIZATION",
      "operator": "sagemaker.visualizations.data_insights_report_0.1",
      "parameters": {
        "report_content": "Warning summary",
        "insights_report_parameters": {
          "target_column": "comments",
          "problem_type": "Classification"
        }
      },
      "trained_parameters": {
        "insights_report_parameters": {
          "duplicate_ratio": 0.025985475975035383,
          "high warnings": [],
          "col_stats": {
            "labels": {
              "labels": [
                "positivo",
                "negativo",
                "label"
              ],
              "label_counts": [
                23808,
                19292,
                1
              ],
              "cardinality": 3,
              "max": null,
              "min": null,
              "median": null,
              "mean": null,
              "numeric_finite_count": 0,
              "integer_count": 0,
              "null_like_count": 0,
              "empty_count": 0,
              "whitespace_count": 0,
              "datetime_count": 0,
              "datetime_non_float_count": 0,
              "datetime_rows_parsed": 10000,
              "nrows": 43101
            },
            "comments": {
              "labels": [
                "boa noite",
                "bom dia",
                "gostei",
                "muito bom",
                "o produto é ótimo",
                "produto de ótima qualidade",
                "produto maravilhoso",
                "boa tarde",
                "bom",
                "chegou antes do prazo",
                "comprei o produto",
                "excelente produto",
                "gostei do produto",
                "gostei muito do produto",
                "não recebi o produto",
                "ok",
                "produto de excelente qualidade",
                "produto excelente",
                "produto muito bom",
                "amei o produto",
                "comprei",
                "entrega rapida",
                "entrega rápida",
                "entrega super rápida",
                "excelente celular",
                "muito boa",
                "muito bonito",
                "não gostei",
                "não posso avaliar",
                "o aparelho é bom",
                "o produto é bom",
                "o produto é muito bom",
                "olá",
                "otimo produto",
                "pessoal",
                "produto bom",
                "produto de qualidade",
                "produto original",
                "produto ótimo",
                "super recomendo",
                "ótimo produto",
                "a entrega foi rápida",
                "a tv é muito boa",
                "ainda não recebi",
                "ainda não recebi o produto",
                "ainda não usei",
                "amei",
                "amigos",
                "aparelho muito bom",
                "as panelas são ótimas",
                "até o momento",
                "bem embalado",
                "boa qualidade",
                "bom ",
                "bom preço",
                "bom produto",
                "bonita",
                "bonito",
                "celular bonito",
                "chegou antes do previsto",
                "chegou bem antes do prazo",
                "chegou muito rápido",
                "chegou rápido",
                "comprei este produto",
                "comprei um",
                "entrega antes do combinado",
                "entrega antes do prazo",
                "entrega dentro do prazo",
                "entrega perfeita",
                "estou satisfeito com o produto",
                "excelente",
                "excelente livro",
                "exelente produto",
                "facil de montar",
                "gente",
                "gostei do produto ",
                "gostei muito",
                "gostei muito da tv",
                "horrível",
                "jogo excelente",
                "jogo muito bom",
                "lindo",
                "lojas americanas",
                "meu filho adorou",
                "muito bom o celular",
                "muito bom o produto",
                "muito bonita",
                "muito lindo",
                "muito ruim",
                "no primeiro uso",
                "não comprem",
                "não funciona",
                "não funcionou",
                "não recebi",
                "não recebi meu produto",
                "não recomendo",
                "o aparelho é lindo",
                "o produto",
                "o produto chegou dentro do prazo",
                "o produto é de boa qualidade"
              ],
              "label_counts": [
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3
              ],
              "cardinality": 42290,
              "max": 1994,
              "min": 1994,
              "median": 1994,
              "mean": 1994,
              "numeric_finite_count": 1,
              "integer_count": 1,
              "null_like_count": 0,
              "empty_count": 2,
              "whitespace_count": 0,
              "datetime_count": 0,
              "datetime_non_float_count": 0,
              "datetime_rows_parsed": 10000,
              "nrows": 43101
            }
          },
          "col_types": {
            "labels": "categorical"
          }
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "ac78be1b-4ba6-46a0-a50e-417be2cf0969",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "6305e76c-96e8-4dbf-9f13-6a617b1e72de",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.handle_missing_0.1",
      "parameters": {
        "operator": "Drop missing",
        "drop_missing_parameters": {
          "input_column": [
            "comments"
          ]
        },
        "impute_parameters": {
          "column_type": "Numeric",
          "numeric_parameters": {
            "strategy": "Approximate Median"
          }
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "1b66fd21-df86-4191-bd89-1d2f2db0e65c",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "6f38ffeb-2ca7-4dbe-b8a1-7618e448b3e4",
      "type": "DESTINATION",
      "operator": "sagemaker.spark.s3_destination_0.1",
      "name": "S3: feedbacks",
      "parameters": {
        "output_config": {
          "compression": "none",
          "output_path": "s3://cgu-poc-sagemaker/datasets/",
          "output_content_type": "CSV",
          "delimiter": ","
        }
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "81ea375b-ec98-4c82-b836-4d70e86a4cb3",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "81ea375b-ec98-4c82-b836-4d70e86a4cb3",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.custom_code_0.1",
      "parameters": {
        "operator": "Python (Pandas)",
        "pandas_parameters": {
          "code": "# Table is available as variable `df`\ndf['labels'] = df['labels'].apply(lambda x: 1 if x == 'positivo' else 0)"
        },
        "pyspark_parameters": {},
        "name": "labels to 0 and 1"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "6305e76c-96e8-4dbf-9f13-6a617b1e72de",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    },
    {
      "node_id": "1b66fd21-df86-4191-bd89-1d2f2db0e65c",
      "type": "TRANSFORM",
      "operator": "sagemaker.spark.custom_code_0.1",
      "parameters": {
        "operator": "Python (Pandas)",
        "pandas_parameters": {
          "code": "# Table is available as variable `df`\ndf['comments'] = df['comments'].apply(lambda x: x[:512] if len(x) > 512 else x)"
        },
        "pyspark_parameters": {},
        "name": "Limit comment size"
      },
      "inputs": [
        {
          "name": "df",
          "node_id": "ac78be1b-4ba6-46a0-a50e-417be2cf0969",
          "output_name": "default"
        }
      ],
      "outputs": [
        {
          "name": "default"
        }
      ]
    }
  ]
}